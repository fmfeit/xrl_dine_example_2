{"version":3,"sources":["ActionPane.js","ImportantActionPane.js","ObservationLinePlot.js","RewardLinePlot.js","RelativeDominancePlot.js","AbsoluteDominancePlot.js","Dashboard.js","index.js"],"names":["ActionPane","explanations","currentlyHoveredTimestep","setCurrentlyHoveredTimestep","currentlyClickedTimestep","setCurrentlyClickedTimestep","useState","actions","setActions","useEffect","actionElements","i","explanation","classes","timestep","length","push","className","onMouseEnter","onMouseLeave","onClick","current_selected_action","ImportantActionPane","depth","rewardColors","bgColor","is_greedy_action","contrastive_important_actions_explanations","ciae","toString","style","backgroundColor","color","id","place","whiteSpace","dangerouslySetInnerHTML","__html","ObservationLinePlot","observation_variables_labels","normalizeState","series","setSeries","chartRef","useRef","data","ordered_keys","Object","keys","sort","a","b","localeCompare","key","name","current_normalized_state","current_state","options","title","text","legend","width","xAxis","minPadding","maxPadding","labels","enabled","plotLines","value","yAxis","visible","credits","plotOptions","tooltip","valueDecimals","stickyTracking","point","events","mouseOver","e","target","category","columnrange","grouping","alignLegend","current","chart","x","window","innerWidth","itemX","scrollX","chartWidth","render","timer","setTimeout","console","log","reflow","clearTimeout","addEventListener","ref","highcharts","Highcharts","highchartsAnnotations","RewardLinePlot","extremaThresholds","rewardChannelLabels","minimaAnnotations","setMinimaAnnotations","maximaAnnotations","setMaximaAnnotations","minAnnotations","maxAnnotations","y","last_rewards","isMin","current_state_value","min_next_state_value","isMax","max_next_state_value","annotations","draggable","labelOptions","verticalAlign","RelativeDominancePlot","reward_channel_labels","action_semantic_labels","chartOptions","setChartOptions","ordered_action_semantic_keys","order_action_labels","ordered_reward_channel_keys","j","action_key","k","reward_key","relative_reward_channel_dominance","type","categories","min","zIndex","stackLabels","fontWeight","formatter","Math","round","this","total","column","stacking","borderWidth","borderColor","display","AbsoluteDominancePlot","absolute_reward_channel_dominance","Dashboard","setExplanations","refreshExplanations","setRefreshExplanations","extremaThresholdFields","setExtremaThresholdFields","setExtremaThresholds","setNormalizeState","dominancePlotsRef","onDrop","useCallback","acceptedFiles","forEach","file","reader","FileReader","onabort","onerror","onload","loadedExplanations","JSON","parse","result","readAsText","useDropzone","noClick","getRootProps","getInputProps","fetchExplanations","fetch","process","then","res","json","newExplanations","catch","err","useInterval","scrollIntoView","behavior","thresholdInputs","entries","step","onChange","prev","parseFloat","left","checked","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5839d159.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\n\nfunction ActionPane({ explanations, currentlyHoveredTimestep, setCurrentlyHoveredTimestep, currentlyClickedTimestep, setCurrentlyClickedTimestep }) {\n  const [actions, setActions] = useState([]);\n\n  useEffect(() => {\n    const actionElements = [];\n    for (let i = 0; i < explanations.length; i++) {\n      const explanation = explanations[i];\n\n      var classes = \"flex text-white justify-center items-center even-size border-2 border-r-0 cursor-pointer border-black p-2\"\n      if (currentlyHoveredTimestep === explanation.timestep || currentlyClickedTimestep === explanation.timestep)\n        classes += ' bg-gray-500';\n      else\n        classes += ' bg-gray-400';\n\n      if (i === explanations.length - 1)\n        classes += \" border-r-2\"\n\n      actionElements.push(\n        <div\n          key={explanation.timestep}\n          className={classes}\n          onMouseEnter={() => setCurrentlyHoveredTimestep(explanation.timestep)}\n          onMouseLeave={() => {\n            if (currentlyHoveredTimestep === explanation.timestep)\n              setCurrentlyHoveredTimestep(null);\n          }}\n          onClick={() => {\n            if (currentlyClickedTimestep !== explanation.timestep) setCurrentlyClickedTimestep(explanation.timestep);\n            else setCurrentlyClickedTimestep(null);\n          }}>\n          <p className=\"text-center m-auto\">{explanation.current_selected_action}</p>\n        </div>\n      )\n      setActions(actionElements);\n    }\n  }, [explanations, currentlyHoveredTimestep, setCurrentlyHoveredTimestep, currentlyClickedTimestep, setCurrentlyClickedTimestep]);\n\n  return (<div className=\"flex actions-pane-wrapper\">{actions}</div>);\n}\n\nexport default ActionPane;\n","import { useEffect, useState } from \"react\";\nimport ReactTooltip from 'react-tooltip';\n\nfunction ImportantActionPane({ explanations, depth, rewardColors, currentlyHoveredTimestep, setCurrentlyHoveredTimestep, currentlyClickedTimestep, setCurrentlyClickedTimestep }) {\n  const [actions, setActions] = useState([]);\n\n  useEffect(() => {\n    const actionElements = [];\n    for (let i = 0; i < explanations.length; i++) {\n      const explanation = explanations[i];\n      var classes = '';\n      var bgColor = '';\n      if (!explanation.is_greedy_action || explanation.contrastive_important_actions_explanations.length < depth) {\n        // render placeholder\n        classes = \"flex justify-center items-center even-size p-2\";\n        if (i > 0 && explanations[i - 1].is_greedy_action && explanations[i - 1].contrastive_important_actions_explanations.length >= depth)\n          classes += \" border-black border-l-2\";\n\n        actionElements.push(<div key={explanation.timestep} className={classes}></div>)\n      } else {\n        const ciae = explanation.contrastive_important_actions_explanations[depth - 1];\n        classes = \"flex justify-center items-center even-size border-2 border-t-0 border-r-0 cursor-pointer border-black p-2 \"\n\n        if (currentlyHoveredTimestep === explanation.timestep || currentlyClickedTimestep === explanation.timestep)\n          bgColor = rewardColors[ciae[0]][1];\n        else\n          bgColor = rewardColors[ciae[0]][0];\n\n        if (i === explanations.length - 1)\n          classes += \" border-r-2\";\n\n        actionElements.push(\n          <div\n            data-tip\n            data-border\n            data-class='action-tooltip'\n            data-border-color='black'\n            data-text-color='white'\n            data-delay-show='250'\n            data-background-color={rewardColors[ciae[0]][1]}\n            data-for={'tooltip-' + depth.toString() + '-' + explanation.timestep.toString()}\n            key={explanation.timestep}\n            className={classes}\n            style={{ backgroundColor: bgColor, color: 'white' }}\n            onMouseEnter={() => setCurrentlyHoveredTimestep(explanation.timestep)}\n            onMouseLeave={() => {\n              if (currentlyHoveredTimestep === explanation.timestep)\n                setCurrentlyHoveredTimestep(null);\n            }}\n            onClick={() => {\n              if (currentlyClickedTimestep !== explanation.timestep) setCurrentlyClickedTimestep(explanation.timestep);\n              else setCurrentlyClickedTimestep(null);\n            }}>\n            <p className=\"text-center m-auto\">{ciae[1]}</p>\n            <ReactTooltip id={'tooltip-' + depth.toString() + '-' + explanation.timestep.toString()} aria-haspopup='true' place='left'>\n              <span className=\"text-base\" style={{whiteSpace: 'pre-wrap'}} dangerouslySetInnerHTML={{__html: ciae[2]}} />\n            </ReactTooltip>\n          </div>\n        )\n      }\n    }\n    setActions(actionElements);\n  }, [explanations, depth, rewardColors, currentlyHoveredTimestep, setCurrentlyHoveredTimestep, currentlyClickedTimestep, setCurrentlyClickedTimestep])\n\n  return (<div className=\"flex actions-pane-wrapper\">{actions}</div>);\n}\n\nexport default ImportantActionPane;\n","import { useEffect, useState, useRef } from \"react\";\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\n\nfunction ObservationLinePlot({ explanations, currentlyHoveredTimestep, setCurrentlyHoveredTimestep, currentlyClickedTimestep, observation_variables_labels, normalizeState }) {\n  const [series, setSeries] = useState([]);\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    const data = [];\n    const ordered_keys = Object.keys(observation_variables_labels).sort((a, b) => a.localeCompare(b));\n    for (let i = 0; i < ordered_keys.length; i++) {\n      const key = ordered_keys[i];\n      data.push({\n        //visible: false,\n        name: observation_variables_labels[key],\n        data: []\n      })\n    }\n\n    for (let i = 0; i < explanations.length; i++) {\n      const explanation = explanations[i];\n      for (let i = 0; i < ordered_keys.length; i++) {\n        const key = ordered_keys[i];\n        if (normalizeState)\n          data[i].data.push([explanation.timestep, explanation.current_normalized_state[key]]);\n        else\n          data[i].data.push([explanation.timestep, explanation.current_state[key]]);\n      }\n    }\n    setSeries(data);\n  }, [explanations, observation_variables_labels, normalizeState]);\n\n  const options = {\n    title: {\n      text: ''\n    },\n    legend: {\n      width: 1600,\n    },\n    xAxis: {\n      minPadding: 0,\n      maxPadding: 0,\n      labels: {\n        enabled: false\n      },\n      plotLines: [{\n        color: '#C3CBD8',\n        width: 3,\n        value: currentlyHoveredTimestep,\n      }, {\n        color: '#9CA3AF',\n        width: 3,\n        value: currentlyClickedTimestep,\n      }]\n    },\n    yAxis: {\n      visible: false,\n    },\n    credits: false,\n    series: series,\n    plotOptions: {\n      series: {\n        tooltip: {\n          valueDecimals: 4\n        },\n        stickyTracking: true,\n        point: {\n          events: {\n            mouseOver: (e) => {\n              setCurrentlyHoveredTimestep(e.target.category);\n            }\n          }\n        }\n      },\n      columnrange: {\n        grouping: false\n      }\n    },\n  }\n\n  const alignLegend = () => {\n    if (chartRef.current !== null) {\n      chartRef.current.chart.legend.options.x = (window.innerWidth - chartRef.current.chart.legend.itemX) / 2 + window.scrollX - (chartRef.current.chart.chartWidth / 2 - chartRef.current.chart.legend.itemX / 2);\n      chartRef.current.chart.legend.render();\n    }\n  }\n\n  useEffect(() => {\n    var timer = setTimeout(() => {\n      console.log(\"hi\")\n      chartRef.current.chart.reflow();\n      alignLegend();\n    }, 1000);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [explanations, normalizeState]);\n\n  useEffect(() => {\n    window.addEventListener('scroll', () => {\n      alignLegend();\n    });\n  }, []);\n\n  return (\n    <div>\n      <HighchartsReact\n        ref={chartRef}\n        highcharts={Highcharts}\n        options={options}\n      />\n    </div>\n  );\n}\n\nexport default ObservationLinePlot;\n","import { useEffect, useState, useRef } from \"react\";\nimport Highcharts from 'highcharts'\nimport highchartsAnnotations from \"highcharts/modules/annotations\";\nimport HighchartsReact from 'highcharts-react-official'\n\nhighchartsAnnotations(Highcharts);\n\nfunction RewardLinePlot({ explanations, rewardColors, currentlyHoveredTimestep, setCurrentlyHoveredTimestep, currentlyClickedTimestep, extremaThresholds, rewardChannelLabels }) {\n  const [series, setSeries] = useState([]);\n  const [minimaAnnotations, setMinimaAnnotations] = useState([]);\n  const [maximaAnnotations, setMaximaAnnotations] = useState([]);\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    const data = [];\n    const minAnnotations = [];\n    const maxAnnotations = [];\n    const ordered_keys = Object.keys(rewardChannelLabels).sort((a, b) => a.localeCompare(b));\n    for (let i = 0; i < ordered_keys.length; i++) {\n      const key = ordered_keys[i];\n      data.push({\n        name: rewardChannelLabels[key],\n        data: [],\n        color: rewardColors[key][0]\n      })\n    }\n\n    for (let i = 0; i < explanations.length; i++) {\n      const explanation = explanations[i];\n      for (let i = 0; i < ordered_keys.length; i++) {\n        const key = ordered_keys[i];\n        data[i].data.push({\n          x: explanation.timestep,\n          y: explanation.last_rewards[key],\n          id: key + (explanation.timestep).toString()\n        });\n        \n        const isMin = explanation.current_state_value[key] + extremaThresholds[key] < explanation.min_next_state_value[key];\n        if (isMin) {\n          minAnnotations.push({\n            point: key + (explanation.timestep).toString(),\n            text: 'Minimum' \n          });\n        }\n\n        const isMax = explanation.current_state_value[key] > extremaThresholds[key] + explanation.max_next_state_value[key];\n        if (!isMin && isMax) {\n          maxAnnotations.push({\n            point: key + (explanation.timestep).toString(),\n            text: 'Maximum' \n          });\n        }\n      }\n    }\n\n    setSeries(data);\n    setMinimaAnnotations(minAnnotations);\n    setMaximaAnnotations(maxAnnotations);\n  }, [explanations, rewardColors, extremaThresholds, rewardChannelLabels]);\n\n  const options = {\n    annotations: [{\n      draggable: '',\n      labelOptions: {\n          backgroundColor: '#E5E7EB',\n          verticalAlign: 'top',\n          y: 11\n      },\n      labels: minimaAnnotations,\n    }, {\n      draggable: '',\n      labelOptions: {\n          backgroundColor: '#E5E7EB',\n          verticalAlign: 'bottom',\n          y: -11\n      },\n      labels: maximaAnnotations, \n    }],\n    title: {\n      text: ''\n    },\n    xAxis: {\n      minPadding: 0,\n      maxPadding: 0,\n      labels: {\n        enabled: false\n      },\n      plotLines: [{\n        color: '#C3CBD8',\n        width: 3,\n        value: currentlyHoveredTimestep,\n      }, {\n        color: '#9CA3AF',\n        width: 3,\n        value: currentlyClickedTimestep,\n      }]\n    },\n    yAxis: {\n      visible: false,\n    },\n    credits: false,\n    series: series,\n    plotOptions: {\n      series: {\n        tooltip: {\n          valueDecimals: 4\n        },\n        stickyTracking: true,\n        point: {\n          events: {\n            mouseOver: (e) => {\n              setCurrentlyHoveredTimestep(e.target.category);\n            }\n          }\n        }\n      },\n      columnrange: {\n        grouping: false\n      }\n    },\n  }\n\n  const alignLegend = () => {\n    if (chartRef.current !== null) {\n      chartRef.current.chart.legend.options.x = (window.innerWidth - chartRef.current.chart.legend.itemX) / 2 + window.scrollX - (chartRef.current.chart.chartWidth / 2 - chartRef.current.chart.legend.itemX / 2);\n      chartRef.current.chart.legend.render();\n    }\n  }\n\n  useEffect(() => {\n    var timer = setTimeout(() => {\n      chartRef.current.chart.reflow();\n      alignLegend();\n    }, 1000);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [explanations]);\n\n  useEffect(() => {\n    window.addEventListener('scroll', () => {\n      alignLegend();\n    });\n  }, []);\n\n  return (\n    <div>\n      <HighchartsReact\n        ref={chartRef}\n        highcharts={Highcharts}\n        options={options}\n      />\n    </div>\n  );\n}\n\nexport default RewardLinePlot;\n","import { useEffect, useState } from \"react\";\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\n\n\nfunction RelativeDominancePlot({ explanations, rewardColors, currentlyClickedTimestep, reward_channel_labels, action_semantic_labels }) {\n  const [chartOptions, setChartOptions] = useState({ title: { text: '' }, credits: false, plotOptions: { visible: false } });\n\n  useEffect(() => {\n    if (currentlyClickedTimestep === null)\n      return;\n\n    const ordered_action_semantic_keys = [  // alphabetic order is useless here\n      'No Operation',\n      'Increase Dimmer',\n      'Decrease Dimmer',\n      'Add Server',\n      'Remove Server'\n    ];\n    const order_action_labels = [\n      action_semantic_labels['No Operation'],\n      action_semantic_labels['Increase Dimmer'],\n      action_semantic_labels['Decrease Dimmer'],\n      action_semantic_labels['Add Server'],\n      action_semantic_labels['Remove Server']\n    ]\n    const ordered_reward_channel_keys = Object.keys(reward_channel_labels).sort((a, b) => a.localeCompare(b));\n    const data = [];\n    for (let i = 0; i < ordered_reward_channel_keys.length; i++) {\n      const key = ordered_reward_channel_keys[i];\n      data.push({\n        color: rewardColors[key][0],\n        name: reward_channel_labels[key],\n        data: []\n      })\n    }\n\n    for (let i = 0; i < explanations.length; i++) {\n      const explanation = explanations[i];\n\n      if (currentlyClickedTimestep !== explanation.timestep)\n        continue;\n\n      for (let j = 0; j < ordered_action_semantic_keys.length; j++) {\n        const action_key = ordered_action_semantic_keys[j];\n        for (let k = 0; k < ordered_reward_channel_keys.length; k++) {\n          const reward_key = ordered_reward_channel_keys[k];\n          data[k].data.push(explanation.relative_reward_channel_dominance[action_key][reward_key]);\n        }\n      }\n    }\n\n    var options = {\n      chart: {\n        type: 'column'\n      },\n      title: {\n        text: 'Relative Reward Channel Dominance'\n      },\n      xAxis: {\n        categories: order_action_labels,\n        labels: {\n          style: {\n            color: 'black'\n          }\n        }\n      },\n      yAxis: {\n        min: 0,\n        plotLines: [{\n          color: 'black',\n          width: 2,\n          value: 0,\n          zIndex: 5\n        }],\n        title: {\n          text: 'Relative Action Value'\n        },\n        stackLabels: {\n          enabled: false,\n          style: {\n            fontWeight: 'bold',\n            color: 'gray'\n          },\n          formatter: function () {\n            return Math.round(this.total * 100) / 100;\n          }\n        }\n      },\n      plotOptions: {\n        column: {\n          tooltip: {\n            valueDecimals: 2\n          },\n          stacking: 'normal',\n          borderWidth: 1,\n          borderColor: 'black'\n        }\n      },\n      series: data\n    };\n    setChartOptions(options);\n  }, [explanations, currentlyClickedTimestep, rewardColors, action_semantic_labels, reward_channel_labels]);\n\n  return (\n    <div style={{ display: currentlyClickedTimestep == null ? 'none' : 'block' }}>\n      <HighchartsReact\n        highcharts={Highcharts}\n        options={chartOptions}\n      />\n    </div>\n  );\n}\n\nexport default RelativeDominancePlot;\n","import { useEffect, useState } from \"react\";\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\n\n\nfunction AbsoluteDominancePlot({ explanations, rewardColors, currentlyClickedTimestep, action_semantic_labels, reward_channel_labels }) {\n  const [chartOptions, setChartOptions] = useState({ title: { text: '' }, credits: false, plotOptions: { visible: false } });\n\n  useEffect(() => {\n    if (currentlyClickedTimestep === null)\n      return;\n\n    const ordered_action_semantic_keys = [  // alphabetic order is useless here\n      'No Operation',\n      'Increase Dimmer',\n      'Decrease Dimmer',\n      'Add Server',\n      'Remove Server'\n    ];\n    const order_action_labels = [\n      action_semantic_labels['No Operation'],\n      action_semantic_labels['Increase Dimmer'],\n      action_semantic_labels['Decrease Dimmer'],\n      action_semantic_labels['Add Server'],\n      action_semantic_labels['Remove Server']\n    ]\n    const ordered_reward_channel_keys = Object.keys(reward_channel_labels).sort((a, b) => a.localeCompare(b));\n    const data = [];\n    for (let i = 0; i < ordered_reward_channel_keys.length; i++) {\n      const key = ordered_reward_channel_keys[i];\n      data.push({\n        color: rewardColors[key][0],\n        name: reward_channel_labels[key],\n        data: []\n      })\n    }\n\n    for (let i = 0; i < explanations.length; i++) {\n      const explanation = explanations[i];\n\n      if (currentlyClickedTimestep !== explanation.timestep)\n        continue;\n\n      for (let j = 0; j < ordered_action_semantic_keys.length; j++) {\n        const action_key = ordered_action_semantic_keys[j];\n        for (let k = 0; k < ordered_reward_channel_keys.length; k++) {\n          const reward_key = ordered_reward_channel_keys[k];\n          data[k].data.push(explanation.absolute_reward_channel_dominance[action_key][reward_key]);\n        }\n      }\n    }\n\n    var options = {\n      chart: {\n        type: 'column'\n      },\n      title: {\n        text: 'Absolute Reward Channel Dominance'\n      },\n      xAxis: {\n        categories: order_action_labels,\n        labels: {\n          style: {\n            color: 'black'\n          }\n        }\n      },\n      yAxis: {\n        plotLines: [{\n          color: 'black',\n          width: 2,\n          value: 0,\n          zIndex: 5\n        }],\n        title: {\n          text: 'Action Value'\n        },\n        stackLabels: {\n          enabled: false,\n          style: {\n            fontWeight: 'bold',\n            color: 'gray'\n          },\n          formatter: function () {\n            return Math.round(this.total * 100) / 100;\n          }\n        }\n      },\n      plotOptions: {\n        column: {\n          tooltip: {\n            valueDecimals: 2\n          },\n          stacking: 'normal',\n          borderWidth: 1,\n          borderColor: 'black'\n        }\n      },\n      series: data\n    };\n    setChartOptions(options);\n  }, [explanations, currentlyClickedTimestep, rewardColors, action_semantic_labels, reward_channel_labels]);\n\n  return (\n    <div style={{ display: currentlyClickedTimestep == null ? 'none' : 'block' }}>\n      <HighchartsReact\n        highcharts={Highcharts}\n        options={chartOptions}\n      />\n    </div>\n  );\n}\n\nexport default AbsoluteDominancePlot;\n","import React, { useEffect, useState, useRef, useCallback } from 'react';\nimport useInterval from '@use-it/interval';\nimport ActionPane from './ActionPane';\nimport ImportantActionPane from './ImportantActionPane';\nimport ObservationLinePlot from './ObservationLinePlot';\nimport RewardLinePlot from './RewardLinePlot';\nimport RelativeDominancePlot from './RelativeDominancePlot';\nimport AbsoluteDominancePlot from './AbsoluteDominancePlot';\nimport { useDropzone } from 'react-dropzone';\n\n// mapping to remove coupling between frontend and backend, e.g. to set different language\nconst observation_variables_labels = {\n  'basic_response_time': 'Basic Response Time',\n  'opt_response_time': 'Opt Response Time',\n  'basic_throughput': 'Basic Throughput',\n  'opt_throughput': 'Opt Throughput',\n  'avg_response_time': 'Avg Response Time',\n  'utilization': 'Utilization',\n  'current_dimmer': 'Current Dimmer',\n  'active_servers': 'Active Servers',\n  // 'max_servers': 'Max Servers',\n  'is_booting': 'Is Booting',\n  //'boot_remaining': 'Boot Remaining',\n  'request_arrival_mean': 'Request Arrival Mean',\n  'request_arrival_moving_mean': 'Request Arrival Moving Mean',\n  //'request_arrival_variance': 'Request Arrival Variance',\n  'request_arrival_moving_variance': 'Request Arrival Moving Variance',\n  //'low_fidelity_service_time': 'Low Fidelity Service Time',\n  //'low_fidelity_service_time_variance': 'Low Fidelity Service Time Variance',\n  //'service_time': 'Service Time',\n  //'service_time_variance': 'Service Time Variance',\n  // 'server_threads': 'Server Threads'\n}\n\nconst reward_channel_labels = {\n  'Running Costs': 'Running Costs',\n  'Revenue': 'Revenue',\n  'User Satisfaction': 'User Satisfaction'\n}\n\nconst action_semantic_labels = {\n  'No Operation': 'No Operation',\n  'Increase Dimmer': 'Increase Dimmer',\n  'Decrease Dimmer': 'Decrease Dimmer',\n  'Add Server': 'Add Server',\n  'Remove Server': 'Remove Server'\n}\n\nconst rewardColors = {\n  'Running Costs': ['#DDAA33', '#C1932E'],\n  'Revenue': ['#BB5566', '#A04958'],\n  'User Satisfaction': ['#0056AD', '#004891'],\n};\n\nfunction Dashboard() {\n  const [explanations, setExplanations] = useState([]);\n  const [refreshExplanations, setRefreshExplanations] = useState(true);\n  const [currentlyHoveredTimestep, setCurrentlyHoveredTimestep] = useState(null);\n  const [currentlyClickedTimestep, setCurrentlyClickedTimestep] = useState(null);\n  const [extremaThresholdFields, setExtremaThresholdFields] = useState({\n    'Running Costs': 0.1,\n    'Revenue': 0.1,\n    'User Satisfaction': 0.1\n  });\n  const [extremaThresholds, setExtremaThresholds] = useState({\n    'Running Costs': 0.1,\n    'Revenue': 0.1,\n    'User Satisfaction': 0.1\n  });\n  const [normalizeState, setNormalizeState] = useState(true);\n  const dominancePlotsRef = useRef(null);\n\n  const onDrop = useCallback((acceptedFiles) => {\n    acceptedFiles.forEach((file) => {\n      const reader = new FileReader();\n\n      reader.onabort = () => console.log('Reading of file was aborted!');\n      reader.onerror = () => console.log('Could not read file!');\n      reader.onload = () => {\n        const loadedExplanations = JSON.parse(reader.result);\n        setRefreshExplanations(false);\n        setExplanations(loadedExplanations);\n      }\n      reader.readAsText(file);\n    })\n  }, [])\n\n  const { getRootProps, getInputProps } = useDropzone({ onDrop: onDrop, noClick: true });\n\n  const fetchExplanations = useCallback(() => {\n    let url = process.env.PUBLIC_URL + '/data/explanations.json'\n    fetch(url)\n      .then(res => res.json())\n      .then(newExplanations => {\n        if (refreshExplanations) {\n          if (explanations.length === 0 || explanations[explanations.length - 1].timestep !== newExplanations[newExplanations.length - 1].timestep)\n            setExplanations(newExplanations)\n        }\n      })\n      .catch(err => console.log(err));\n  }, [explanations, refreshExplanations]);\n\n  useEffect(() => fetchExplanations(), [fetchExplanations]);  // fetch once on startup\n  useInterval(() => {\n    if (currentlyClickedTimestep === null && refreshExplanations)\n      fetchExplanations();\n  }, 1000);\n\n  useEffect(() => {\n    if (currentlyClickedTimestep !== null)\n      dominancePlotsRef.current.scrollIntoView({ behavior: 'smooth' });\n  }, [currentlyClickedTimestep]);\n\n  const thresholdInputs = [];\n  Object.entries(extremaThresholdFields).forEach(([key, value]) => {\n    thresholdInputs.push(\n      <div key={key} className='flex mx-2 items-center'>\n        <p className='mr-2'>{reward_channel_labels[key] + ':'}</p>\n        <input\n          type='number'\n          min='0'\n          step='0.01'\n          className='w-16 border rounded-md pl-2'\n          value={value}\n          onChange={e => setExtremaThresholdFields(prev => ({\n            ...prev,\n            [key]: parseFloat(e.target.value)\n          }))}\n        />\n      </div>\n    );\n  })\n  thresholdInputs.push(\n    <input\n      key='refresh-btn'\n      type='button'\n      value='Refresh'\n      className='px-2 ml-2 rounded-md'\n      onClick={() => setExtremaThresholds(extremaThresholdFields)}\n    />\n  )\n\n  return (\n    <div {...getRootProps()}>\n      <div className=\"line-plot-container\">\n        <ObservationLinePlot\n          explanations={explanations}\n          currentlyHoveredTimestep={currentlyHoveredTimestep}\n          setCurrentlyHoveredTimestep={setCurrentlyHoveredTimestep}\n          currentlyClickedTimestep={currentlyClickedTimestep}\n          observation_variables_labels={observation_variables_labels}\n          normalizeState={normalizeState}\n        />\n        <RewardLinePlot\n          explanations={explanations}\n          rewardColors={rewardColors}\n          currentlyHoveredTimestep={currentlyHoveredTimestep}\n          setCurrentlyHoveredTimestep={setCurrentlyHoveredTimestep}\n          currentlyClickedTimestep={currentlyClickedTimestep}\n          extremaThresholds={extremaThresholds}\n          rewardChannelLabels={reward_channel_labels}\n        />\n      </div>\n      <ActionPane\n        explanations={explanations}\n        currentlyHoveredTimestep={currentlyHoveredTimestep}\n        setCurrentlyHoveredTimestep={setCurrentlyHoveredTimestep}\n        currentlyClickedTimestep={currentlyClickedTimestep}\n        setCurrentlyClickedTimestep={setCurrentlyClickedTimestep}\n      />\n      <ImportantActionPane\n        explanations={explanations}\n        depth={1}\n        rewardColors={rewardColors}\n        currentlyHoveredTimestep={currentlyHoveredTimestep}\n        setCurrentlyHoveredTimestep={setCurrentlyHoveredTimestep}\n        currentlyClickedTimestep={currentlyClickedTimestep}\n        setCurrentlyClickedTimestep={setCurrentlyClickedTimestep}\n      />\n      <ImportantActionPane\n        explanations={explanations}\n        depth={2}\n        rewardColors={rewardColors}\n        currentlyHoveredTimestep={currentlyHoveredTimestep}\n        setCurrentlyHoveredTimestep={setCurrentlyHoveredTimestep}\n        currentlyClickedTimestep={currentlyClickedTimestep}\n        setCurrentlyClickedTimestep={setCurrentlyClickedTimestep}\n      />\n      <div className='flex mt-5' ref={dominancePlotsRef}>\n        <div className='dominance-plot'>\n          <AbsoluteDominancePlot\n            explanations={explanations}\n            rewardColors={rewardColors}\n            currentlyClickedTimestep={currentlyClickedTimestep}\n            reward_channel_labels={reward_channel_labels}\n            action_semantic_labels={action_semantic_labels}\n          />\n        </div>\n        <div className='dominance-plot' style={{ left: '50vw' }}>\n          <RelativeDominancePlot\n            explanations={explanations}\n            rewardColors={rewardColors}\n            currentlyClickedTimestep={currentlyClickedTimestep}\n            reward_channel_labels={reward_channel_labels}\n            action_semantic_labels={action_semantic_labels}\n          />\n        </div>\n      </div>\n      <div className='flex justify-start border py-2'>\n        <input {...getInputProps()} style={{ display: 'block' }} />\n        {thresholdInputs}\n        <div className='flex ml-32 items-center'>\n          <p className='mr-2'>{'Normalize State: '}</p>\n          <input\n            type='checkbox'\n            className='w-16 border rounded-md pl-2'\n            value={normalizeState}\n            checked={normalizeState}\n            onChange={e => {\n              setNormalizeState(e.target.checked);\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Dashboard from './Dashboard';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Dashboard />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}